
1.CocosCreator touchmove 文档描述是：当手指在屏幕上目标节点区域内移动时回调，但实际上手指不在目标节点区域内，也能进回调。

2.CocosCreator Node的getBoundingBoxToWorld() 函数，返回的是目标节点，能包容所有子节点矩阵，和自身矩阵的一个最大的矩阵

3.在scaleRepeatForever下（动作系统永动），永动动作执行的节点，不能作为button组件的缩放对象，只能换成别的节点进行缩放

4.layout 的child模式下，只会对子节点的宽高大小重新进行设置，并不会对整个子节点缩放

5.设定间隔时间的无限定时器，并不会立即回调，而是经过一个设定的间隔时间再回调

6.CocosCreator Rect矩形的坐标点是左下角

7.CocosCreator 的拖尾组件，贴图实际渲染时，会逆时针旋转90度

8.触摸监听对象在iOS无法获取正确的值（getID方法返回的值不正确），解决方案：用一个全局可访问的变量记录touchID，在
touchstart回调里记录ID，如果当前touchID存在的话，不响应事件

9.mask组件显示出来的部分才能监听到触摸事件（无论是正向遮罩还是反向遮罩）

10.CocosCreator2.1.3的ScrollView组件暗改了，回弹效果很差

11.CocosCreator多点触摸时，只有touchmove里getTouches方法能获取多个触摸点，touchstart、touchend、touchcancel里只能获取一个触点

12.真机测试时，touchmove回调会一直进（就算不进行移动），有多少个触点同时进多少次

13.CocosCreator的 game onHide API 退出游戏时，也会监听

14.使用camera进行截屏，新建的renderTexture的init方法第三个参数一定要加上cc.gfx.RB_FMT_S8，不然对于有mask组件的节点，截图会出现图片白底现象

15.当loadRes方法不传参资源类型时，在浏览器调试，加载图片的类型为texture2D，构建打包后，加载图片类型为SpriteFrame

16.使用loader对象加载类型为Texture时，资源的name属性会为空字符串(坑)，加载类型为SpriteFrame时，图片的name属性为正常的资源名称

17.walk函数非常奇怪，当执行节点没有子节点时，只会访问自身，有子节点时，会访问同级下，向下展开的所有包括自身的节点树

18.layout组件布局模式修改或子节点zIndex修改时，一般都需要调用updateLayout方法即刻更新生效

19.a && b 表达式：
如果 a 或 b 中有null或undefined类型，a && b 最优先输出null或undefined
如果 a 或 b 中有布尔值类型，a && b 次级优先输出（a && b）表达式的布尔值
如果 a 或 b 为其他类型，a && b 则输出的是 b 的值

表情乱斗大作战的安卓版本，加了fitAndroid方法，用于适配广告策略GG0，小游戏版本更替安卓版本时，记得加上
表情包的QQ版本，有oppo的原生icon，切换场景时，报了几个小错，但不影响游戏进行，忘了改了

随笔：
关于AssetBundle
1. Creator 有 4 个 内置AB包，包括internal：存放所有内置资源以及其依赖资源（优先级11）、start-scene：如果在构建发布面板中勾选了初始场景分包，则首场景将会被构建到 start-scene 中（优先级9）、 resources：存放resources目录下的所有资源和及其依赖资源（优先级8）、main：存放所有在参与构建场景及其依赖资源（称作主包，如果勾选了初始场景分包且只有一个场景时，主包成为空包，优先级7）、，在设置 Bundle 名称 时请不要使用这四个名称

2.小游戏分包只能放在本地，不能配置为远程包，所以当 压缩类型 设置为 小游戏分包 时，配置为远程包 项不可勾选

3. Zip 压缩类型主要是为了降低网络请求数量，如果放在本地，不用网络请求，则没什么必要，所以要求与 配置为远程包 搭配使用

4.在构建时，配置为AB包的 文件夹中的资源（包含场景、代码和其他资源）以及 文件夹外的相关依赖资源 都会被合并到同一个AB包中

5.配置AB包时，若勾选了 配置为远程包，则这个文件夹会被打包到对应平台发布包目录下的 remote 文件夹中

6.配置AB包时，若设置了 压缩类型 为 小游戏分包，则这个文件夹会被打包到对应平台发布包目录下的 subpackages 文件夹中

7. AB包 优先级相同 的情况下，引用外部资源时，构建后，该资源会在每个AB包中复制一份，此时不同的AB包之间没有依赖关系，可按任意顺序加载，但由于该资源会被复制N份，这样会引起包体的增大

7.AB包 优先级不同 的情况下，引用外部资源时，构建后，该资源会放在 优先级高 的AB包（包括内置AB包）中，优先级低 的AB包只会存储一条记录信息。此时优先级低的AB包会 依赖 优先级高的AB包。如果想在优先级低的AB包中加载此资源，必须在加载优先级低的AB包 之前 先加载（loadBundle）优先级高的AB包

8.在通过 API（loadBundle ）加载AB包时，引擎并 没有加载 AB包中的所有资源，而是只 加载 AB包的 资源清单，以及包含的 所有脚本

9.加载不需要等到预加载完成后再调用，开发者可以在任何时候进行加载。正常加载接口会直接复用预加载过程中已经下载好的内容，缩短加载时间，预加载只会去 下载 必要的资源，并 不会进行资源的反序列化和初始化工作，也就不会将资源放入内存（cc.assetManager.assets）中，所以性能消耗更小，确保了游戏体验流畅






